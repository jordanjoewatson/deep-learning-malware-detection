import pefile
from os import listdir, system
from os.path import isfile, join, getsize
from numpy import array
from PIL import Image
import os
from statistics import mean, stdev
import numpy as np
import argparse

"""
File that takes a PE file and splits it into individual section files
-s Src directory of files to split
-d Dst directory to store files

reads from a directory structure of
/dir/file1
/dir/file2
...

writes to a directory structure of
/dir/file1/file1section1
/dir/file1/file1section2
...

Malware and Goodware should be handled seperately to keep the directories serparate
"""

parser = argparse.ArgumentParser()

parser.add_argument("-s", "--src", default=None, required=True,
                    help="Src directory to convert")
parser.add_argument("-d", "--dst", default=None, required=True,
                    help="Dst directory to convert")

args = parser.parse_args()

# read in all files in src directory
files = [f for f in listdir(args.src) if isfile(join(args.src, f))]

"""
For every file in src directory, create new directory. Read in the file
for everysection in the file, read the data, create a new file and
write in dst directory
"""
for f in files:
    createDirCmd = 'mkdir {}{}'.format(args.dst, f)
    system(createDirCmd)
    pe = pefile.PE(args.src + f)
    i = 0
    for s in pe.sections:
        sdata = s.get_data()

        newfilename = "{}_{}".format(str(i), f)

        _f = open('{}{}/{}'.format(args.dst, f, newfilename), "wb")
        _f.write(sdata)
        _f.close()
        i += 1
